<!-- DEPLOYMENT: control and visualize robot with joint space controllers -->
<launch>
	<arg name="run_real" default="false" doc="Run on real robot: activate hardware control, try to execute corresponding components on robot side."/>
	<arg name="robot" default="true" doc="Launch components which meant to be run on robot side."/>
	<arg name="host" default="true" doc="Launch components  which meant to be run on host side."/>
	<arg name="robot_name" default="sweetie_bot_proto2" doc="Robot-specific configuration packages prefix (e.g. set 'sweetie_bot_proto2' for 'sweetie_bot_proto2_description', 'sweetie_bot_proto2_moveit_config', 'sweetie_bot_proto2_deploy' packages)."/>
	<arg name="robot_profile" default="default" doc="Use configuration profile (load_param.launch, *.cpf, .log4cpp files) located in '`rospack find {robot_name}_deploy`/{robot_profile}' directory."/>
	<arg name="robot_profile_path" default="$(eval find(arg('robot_name')+'_deploy') + '/' + arg('robot_profile'))" doc="Fully qualified path to configuration profile. By default 'robot_name' and 'robot_profile' parameters are sed to determine it."/>
	<arg name="robot_ns" default="/" doc="Namespace where to run robot components "/>

	<machine name="localhost" address="localhost" user="$(env USER)" />
	<machine name="sweetiebot" address="$(eval robot_name.replace('sweetie_bot_',''))" user="sweetie" default="never"/>

	<!-- load parameters -->
	<group if="$(arg host)">
		<include ns="$(arg robot_ns)" file="$(arg robot_profile_path)/load_param.launch">
			<arg name="run_real" value="$(arg run_real)" />
		</include>
	</group>

	<!-- start robot -->
	<group ns="$(arg robot_ns)">
		<include file="$(find sweetie_bot_deploy)/motion_core/sweetie_bot_core.launch">
			<arg name="run_real" value="$(arg run_real)" /> 
			<arg name="host" value="$(arg host)" /> 
			<arg name="robot" value="$(arg robot)" /> 
			<arg if="$(arg run_real)" name="modules" value="motion.lua controller_all.lua" />
			<arg unless="$(arg run_real)" name="modules" value="virtual_motion.lua controller_all.lua" />
			<arg name="overlays" value="$(arg robot_profile_path) control motion_core" /> 
			<arg name="interactive" value="false" /> 
		</include>
		<!-- robot-specific ROS nodes -->
		<include if="$(eval robot and run_real)" file="$(arg robot_profile_path)/robot_module.launch">
			<arg name="robot_ns" value="$(arg robot_ns)" /> 
		</include>
	</group>
	
	<!-- host components -->
	<group if="$(arg host)">
		<!-- gait generator -->
		<node name="gait_generator" pkg="sweetie_bot_gait_generator" type="towr_gait_generator" output="screen">
			<remap from="step_sequence" to="motion/controller/step_sequence" />     
		</node>
	</group>

	<!-- launch operator GUI -->
	<group if="$(arg host)">
		<include file="$(find sweetie_bot_deploy)/control/hmi.launch">
			<arg name="robot_name" value="$(arg robot_name)" />
			<arg name="robot_ns" value="$(arg robot_ns)" /> 
			<arg name="rviz_config" value="$(arg robot_profile_path)/joint_space_control.rviz" /> 
		</include>
	</group>
</launch>
