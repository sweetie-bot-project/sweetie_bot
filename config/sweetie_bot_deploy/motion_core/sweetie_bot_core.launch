<!-- MODULE: run minimal configuration: core, local and global robot_state_punlisher, fixed world frame -->
<launch>
	<arg name="run_real" default="false" doc="Run on real robot."/>
	<arg name="robot" default="true" doc="Launch components which meant to be run on robot side."/>
	<arg name="host" default="true" doc="Launch components  which meant to be run on host side."/>
	<arg name="interactive" default="false" doc="Run OROCOS in XTerm in interactive mode." /> 

	<arg name="modules" default="motion_core.lua" doc="OROCOS deployment modules list" /> 
	<arg name="overlays" default="motion_core" doc="OROCOS deployment overlays list" />

	<arg name="tf_prefix_real" default="real" doc="tf_prefix for robot real pose if it is published." />
	<arg name="static_tf_shift" default="0 0 0" doc="Shift of pose published in global namespace. Format: x y z " />
	<arg name="robot_ns" default="/" doc="Namespace where robot is being launch." />

	<group if="$(arg robot)">
		<!-- REFERENCE POSE PUBLISHING: tf, joint_states -->
		<!-- remaps -->
		<remap from="motion/aggregator_ref/out_joints_sorted" to="$(arg robot_ns)/joint_states" />
		<remap from="motion/in_battery_state" to="$(arg robot_ns)/battery_state" />
		<!-- robot_state_publisher: reference robot pose: local publisher -->
		<include file="$(find sweetie_bot_deploy)/motion_core/robot_state.launch">
			<arg if="$(arg run_real)" name="machine" value="sweetiebot"/> 
		</include>
		<remap from="motion/odometry_ref/out_tf" to="tf" />
		<!-- REAL POSE PUBLISHING: joint_states_real -->
		<!-- remaps -->
		<remap from="motion/aggregator_real/out_joints_sorted" to="joint_states_real" /> 
		<!-- MOTION CORE -->
		<include file="$(find sweetie_bot_deploy)/motion_core/motion.launch">
			<arg if="$(arg run_real)" name="machine" value="sweetiebot"/> 
			<arg name="modules" value="$(arg modules)" /> 
			<arg name="overlays" value="$(arg overlays)" />
			<arg name="interactive" value="$(arg interactive)"/> 
			<arg name="param_namespace"  value="$(arg robot_ns)"/>
		</include>
	</group>

	<group if="$(arg host)">
		<!-- relay local tf topic to root /tf  -->
		<group unless="$(eval robot_ns == '/')"> 
			<node name="tf_relay" pkg="topic_tools" type="relay" args="tf /tf" />
			<node name="tf_static_relay" pkg="topic_tools" type="relay" args="tf_static /tf_static" />
		</group>
		<!-- publish real pose to /tf with tf_prefix_real for visualization purpose  -->
		<group if="$(arg run_real)">
			<!-- robot_state_publisher: real robot pose -->
			<include file="$(find sweetie_bot_deploy)/motion_core/robot_state.launch">
				<arg name="name" value="robot_state_publisher_real" /> 
				<arg name="tf_prefix" value="$(arg tf_prefix_real)" /> 
				<arg name="joint_states_topic" value="joint_states_real" /> 
			</include>
			<!-- fix together reference and real base_link: real odometry is unavailable -->
			<node if="$(arg run_real)" pkg="tf" type="static_transform_publisher" name="odometry_real" args="$(arg static_tf_shift) 0 0 0 base_link $(arg tf_prefix_real)/base_link 100" /> 
		</group>
	</group>
</launch>
