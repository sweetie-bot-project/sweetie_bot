<!-- DEPLOYMENT: launch robot without host computer (motion control, voice, flexbe action server). Operator machine (host) can be connected later to visualize telemetery. -->
<launch>
	<arg name="run_real" default="false" doc="Run on real robot."/>
	<arg name="robot" default="true" doc="Launch components which meant to be run on robot side."/>
	<arg name="host" default="true" doc="Launch components  which meant to be run on host side."/>

	<arg name="robot_name" default="sweetie_bot_proto2" doc="Robot-specific configuration packages prefix (e.g. set 'sweetie_bot_proto2' for 'sweetie_bot_proto2_description', 'sweetie_bot_proto2_moveit_config', 'sweetie_bot_proto2_deploy' packages)."/>
	<arg name="robot_profile" default="default" doc="Use configuration profile (load_param.launch, *.cpf, .log4cpp files) located in '`rospack find {robot_name}_deploy`/{robot_profile}' directory."/>
	<arg name="robot_profile_path" default="$(eval find(arg('robot_name')+'_deploy') + '/' + arg('robot_profile'))" doc="Fully qualified path to configuration profile. By default 'robot_name' and 'robot_profile' parameters are sed to determine it."/>
	<arg name="robot_ns" default="/" doc="Namespace where to run robot components "/>

	<arg name="run_moveit" default="true" doc="Run move_group associated with robot."/>
	<arg name="run_flexbe" default="true" doc="Run flexbe behaviour engine. For debug purpose it can start separately."/>
	<arg name="start_behavior" default="" doc="FlexBe behavior to start"/>
	<arg name="start_behavior_delay" default="20" doc="Delay before FlexBe behavior started."/>

	<machine name="localhost" address="localhost" user="$(env USER)" default="true"/>
	<machine name="sweetiebot" address="localhost" user="$(env USER)" default="true"/>

	<!-- load parameters -->
	<group if="$(arg robot)">
		<include ns="$(arg robot_ns)" file="$(arg robot_profile_path)/load_param.launch"/>
	</group>

	<!-- ROBOT -->

	<!-- start robot -->
	<group if="$(arg robot)" ns="$(arg robot_ns)">
		<include file="$(find sweetie_bot_deploy)/motion_core/sweetie_bot_core.launch">
			<arg name="run_real" value="$(arg run_real)" /> 
			<arg name="host" value="$(arg host)" /> 
			<arg name="robot" value="$(arg robot)" /> 
			<arg if="$(arg run_real)" name="modules" value="motion.lua controller_all.lua" />
			<arg unless="$(arg run_real)" name="modules" value="virtual_motion.lua controller_all.lua" />
			<arg name="overlays" value="$(arg robot_profile_path) control motion_core" /> 
			<arg name="interactive" value="false" /> 
		</include>
		<!-- robot-specific ROS nodes -->
		<include if="$(eval robot and run_real)" file="$(arg robot_profile_path)/robot_module.launch">
			<arg name="robot_ns" value="$(arg robot_ns)" /> 
		</include>
		<!-- voice node  -->
		<env name="LD_PRELOAD" value="/usr/lib/x86_64-linux-gnu/libffi.so.7" />
		<node pkg="sweetie_bot_voice" type="voice" name="voice">
			<remap from="control" to="$(arg robot_ns)/control" />
		</node>
		<!-- FLEXBE: control node and action server -->
		<group if="$(arg run_flexbe)">
			<include file="$(find sweetie_bot_deploy)/highlevel/flexbe.launch" >
				<arg name="gui" value="false" />
				<arg name="robot_ns" value="$(arg robot_ns)" />
				<arg name="flexbe_ns" value="$(arg robot_ns)/flexbe" />
			</include>
		</group>
		<!-- joystick -->
		<group if="$(eval not host and robot)">
			<include file="$(find sweetie_bot_deploy)/highlevel/joy_embeded.launch" >
				<arg name="robot_ns" value="$(arg robot_ns)" />
			</include>
		</group>
	</group>

	<!-- robot nodes on host side -->
	<group if="$(arg host)">

		<!-- CORE COMPONENTS -->

		<!-- planners: they can be launched on robot yet -->
		<group ns="$(arg robot_ns)">
			<!-- moveit -->
			<include if="$(arg run_moveit)" file="$(find sweetie_bot_deploy)/control/moveit.launch">
				<arg name="robot_ns" value="$(arg robot_ns)" /> 
				<arg name="robot_name" value="$(arg robot_name)" /> 
			</include>
			<!-- gait generator -->
			<node name="gait_generator" pkg="sweetie_bot_gait_generator" type="towr_gait_generator" output="screen">
				<remap from="step_sequence" to="motion/controller/step_sequence" />     
			</node>
		</group>

		<!-- HMI: launch operator GUI -->

		<!-- joystick connected to the host -->
		<include file="$(find sweetie_bot_deploy)/highlevel/joy.launch" >
			<arg name="robot_ns" value="$(arg robot_ns)" />
		</include>
		<!-- rviz -->
		<group>
			<include file="$(find sweetie_bot_deploy)/control/hmi.launch">
				<arg name="robot_ns" value="$(arg robot_ns)" /> 
				<arg name="rviz_config" value="$(arg robot_profile_path)/joint_space_control.rviz" /> 
			</include>
		</group>
	</group>

	<!-- start flexbe behavior -->
	<group if="$(eval start_behavior != '')">
		<node ns="$(arg robot_ns)/flexbe" 
			name="start_behavior" pkg="flexbe_widget" type="be_launcher" output="screen" args="-b '$(arg start_behavior)'" 
			launch-prefix="bash -c 'sleep $(arg start_behavior_delay); $0 $@' " />
	</group>
</launch>
