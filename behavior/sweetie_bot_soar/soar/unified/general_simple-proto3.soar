#
# PROTO2 GENERAL BEHAVIOR
#
# Implenents following drives:
#  1. movement (random animation, step-sequence-graph, random head movements).
#  2. curiosity (watch on people)
#  3. social (talk with people)
#  3. security (overheat). 
#

#
# MOVEMENT DRIVE
#

## Propose perform animation (no one around)
sp {moving*propose*decide-animation
	(state <s> ^name movement ^substate general -^performing-animation)
-->
	(<s> ^operator <op> +, =)
   	(<op> ^name performing-animation ^substate movement ^process-args <a>)
	(<a> ^tag alone ^deadline-time 30.0)
}

# invoke RandHeadMovements for random timeout instead of animation 
sp {movement*propose*rand*head*movements
	(state <s> ^name movement ^substate general -^moving-head)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name moving-head ^substate flexbe ^process-args <a> ^interruptable hard)
	(<a> ^behavior ExecuteRandHeadMovements ^timeout (+ 10 (rand-int 20)))
}

# wait 
sp {movement*propose*wait
	(state <s> ^name movement ^substate general ^{<<|performing-animation| |moving-head|>>} <proc>)
	(<proc> ^substate <substate>)
-->
	(<s> ^operator <o> +, =)
   	(<o> ^name wait-proccess ^substate <substate> ^drive movement ^process-link <proc>)
}

#
# CURIOSITY DRIVE
#

# SWITCH ATTENTION OVER MULTIPLE OBJECTS

sp {curiosity*propose*attention
	(state <s> ^name curiosity ^substate general ^beliefs.object <obj>)
	(<obj> ^input-link <il>)
	(<il> ^visible now ^yaw-body {<<|left| |center| |right|>>})
-->
	(<s> ^operator <o> +, =)
   	(<o> ^name look-at-multiple-objects ^substate attention ^process-args <a>)
}

##
## SOCIAL DRIVE
## 
#
## ELABORATIONS
#
## elaborate talking process link
#sp {social*elaborate*talk
#	(state <s> ^name social ^substate general ^{<<|talking-on-desire| |talking-on-request|>>} <proc>)
#-->
#	(<s> ^talking <proc>)
#}
#
## DECISION OPERATORS: HUMAN INTERACTION
#
## continue talk
#sp {talker*propose*talk-continue
#	(state <s> ^name social ^substate general ^talking <proc>)
#	(<proc> ^substate <substate>)
#-->
#	(<s> ^operator <o> +, =)
#   	(<o> ^name talking-continue ^substate <substate> ^process-link <proc>)
#}
#
## SELECT HUMAN TO TALK
#
## select stranger if we are looking at him
#sp {social*propose*talk-start
#	(state <s> ^name social ^substate general -^talking ^beliefs-stable.predicate <pred> ^beliefs <b>)
#	(<pred> ^name looking-at ^object <obj>)
#	(<obj> ^type human)
#-->
#	(<s> ^operator <o> +, =)
#   	(<o> ^name talking-on-desire ^substate talk-llm ^process-args <a>)
#	(<a> ^object <obj>)
#}
#
## reject talk if previous talk is not forgeted
#sp {social*preference*talk-start*reject-recent
#	(state <s> ^name social ^substate general ^operator <op> + ^predicates.process <proc>)
#	(<op> ^name talking-on-desire ^process-args.object <obj>)
#	(<proc> ^name talking-on-desire ^status succeed ^object <obj>)
#-->
#	(<s> ^operator <op> -)
#}
#
## reject talk human ignors-me sweetie 
#sp {social*preference*talk-start*reject-ignor-me
#	(state <s> ^name social ^substate general ^operator <op> + ^beliefs.predicate <pred>)
#	(<op> ^name talking-on-desire ^process-args.object <obj>)
#	(<pred> ^name ignors-me ^actor <obj>)
#-->
#	(<s> ^operator <op> -)
#}
#
## start is human satrted to say something
#sp {social*propose*talk-on-greeting
#	(state <s> ^name social ^substate general -^talking ^beliefs-stable.predicate <pred> ^io.input-link.sound.speech 1)
#	(<pred> ^name looking-at ^object <obj>)
#-->
#	(<s> ^operator <o> +, =)
#   	(<o> ^name talking-on-request ^substate talk-llm ^process-args <a>)
#	(<a> ^object <obj>)
#}

#
# SECURITY
#

# COGNITION OPERATORS

# detect overheat
sp {security*propose*detect-overheat
	(state <s> ^name security ^substate general ^io.input-link.servos.status overheat ^beliefs <b>)
	-{(<b> ^predicate <pred>)
	  (<pred> ^name overheat)}
-->
	(<s> ^operator <op> +, =)
	(<op> ^name initiate-overheat ^type cognition automatic ^add-predicate <new-pred>)
	(<new-pred> ^name overheat ^deadline-time 30.0)
}

# DECISION OPERATORS

# place head in nominal position if something happened with servos
sp {security*propose*head-to-nominal
	(state <s> ^name security ^substate general ^io.input-link <il> )
	(<il> ^servos.status {<<|overheat| |off|>>} ^head-pose.pose {<> head_nominal})
-->
	(<s> ^operator <op> +, =)
	(<op> ^name move-head-nominal-pose ^substate flexbe ^process-args <a>)
    (<a> ^behavior ExecuteSetPose ^pose head_nominal)
}

# say about overheat
sp {security*propose*say-overheat
	(state <s> ^name security ^substate general ^io.input-link.servos.status overheat ^beliefs <b>)
	-{(<b> ^predicate <pred>) (<pred> ^name said-about-overheat)}
-->
	(<s> ^operator <op> +, =)
	(<op> ^name say-overheat ^type automatic ^add-predicate <pred-new> ^add-output-command textcmd ^output-command-args <cmd>)
	(<pred-new> ^name said-about-overheat ^deadline-time 30.0)
	(<cmd> ^type |voice/say/ru| ^command |My motors have overheated! I'll stay still for some time.|)
}

# say about servos failure
sp {security*propose*say-servo-failed
	(state <s> ^name security ^substate general ^io.input-link.servos.status {<<|off|>>} ^beliefs <b>)
	-{(<b> ^predicate <pred>) (<pred> ^name said-about-servo-failed)}
-->
	(<s> ^operator <op> +, =)
	(<op> ^name say-servo-failed ^type automatic ^add-predicate <pred-new> ^add-output-command textcmd ^output-command-args <cmd>)
	(<pred-new> ^name said-about-servo-failed ^deadline-time 30.0)
	(<cmd> ^type |voice/say/ru| ^command |One of my servos failed! Help me!| ^automatic-remove yes)
}

# wait until servos are normal
sp {security*propose*wait-if-servo-failed
	(state <s> ^name security ^substate general ^io.input-link.servos.status {<<|off|>>})
-->
	(<s> ^operator <op> +, =)
	(<op> ^name wait-servo-failed ^substate wait)
}

# wait until overheat predicate is expired is over
sp {security*propose*wait-if-overheat
	(state <s> ^name security ^substate general ^beliefs.predicate.name overheat)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name wait-overheat ^substate wait)
}

# PREFERENCES

# problem vocalization and pose change must be done before waiting
sp {security*prefer*wait-is-last-chioce
	(state <s> ^name security ^substate general ^operator <op1> + ^operator <op2> +)
	(<op1> ^name {<<|wait-overheat| |wait-servo-failed|>>})
	(<op2> ^name {<<|move-head-nominal-pose| |say-overheat| |say-servo-failed|>>})
-->
	(<s> ^operator <op1> < <op2>)
}

