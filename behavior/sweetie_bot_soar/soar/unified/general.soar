# OVERALL BEHAVIOR SELECTION

# attach related decision
sp {talker*elaborate*decision
	(state <s> ^substate main ^beliefs.decision <d>)
	(<d> ^substate main)
-->
	(<s> ^decision <d>)
}

# PROPOSE ANIMATION OR WAIT

# Propose perform animation (no one around)
sp {talker*propose*decide-animation
	(state <s> ^substate main -^decision)
-->
	(<s> ^operator <op> +, =)
   	(<op> ^name decide-animation ^drive movement ^type automatic ^add-decision <d>)
	(<d> ^name animation ^substate main ^deadline-time 5.0)
}

sp {talker*propose*decide-wait
	(state <s> ^substate main -^decision)
-->
	(<s> ^operator <o> +, =)
   	(<o> ^name decide-wait ^drive movement ^type automatic ^add-decision <d>)
	(<d> ^name wait ^substate main ^deadline-time (+ 5 (rand-int 15)))
}

# Propose perform animation (no one around)
#sp {talker*propose*animation
#	(state <s> ^substate main ^decision <d>)
#	(<d> ^name animation)
#-->
#	(<s> ^operator <o> +, =)
#   	(<o> ^name animation-alone ^drive movement ^substate animation ^tag alone ^result <res>)
#	(<res> ^status succeed ^remove-decision <d>)
#}

# invoke RandHeadMovements for random timeout instead of animation 
sp {talker*propose*rand*head*movements
	(state <s> ^substate main ^decision <d>)
	(<d> ^name animation)
-->
	(<s> ^operator <o> + =)
   	(<o> ^name head-movements ^drive movement ^substate flexbe ^interruptable hard)
   	(<o> ^behavior ExecuteRandHeadMovements ^param <p>)
	(<p> ^timeout (+ 5 (rand-int 15)))
}

# wait 
sp {talker*propose*wait
	(state <s> ^substate main ^beliefs.decision.name wait)
-->
	(<s> ^operator <o> +, =)
   	(<o> ^name wait ^drive movement ^substate wait)
}

# LOOK AT OBJECT

#sp {talker*propose*look-at
#	(state <s> ^substate main ^drive <d> ^beliefs.object <obj>)
#	(<obj> ^input-link.visible now)
#	(<d> ^name curiosity)
#-->
#	(<s> ^operator <o> + =)
#   	(<o> ^name look-at ^substate look-at ^object <obj> ^delay 2.0 ^timeout 20.0 ^drive <d>)
#}

# SWITCH ATTENTION OVER MULTIPLE OBJECTS

sp {talker*propose*look-at
	(state <s> ^substate main ^beliefs.object <obj>)
	(<obj> ^input-link.visible now)
-->
	(<s> ^operator <o> +, =)
   	(<o> ^name look-at-multiple-objects ^substate attention ^drive curiosity)
}

# SELECT HUMAN TO TALK

# select human if we a looking at him 
sp {talker*propose*select-human-to-talk
	(state <s> ^substate main ^beliefs <b>)
	(<b> ^object <obj> ^predicate <pred>)
	(<obj> ^type human)
	(<pred> ^name looking-at ^object <obj>)
	-{(<b> ^decision <d>) 
      (<d> ^name talk ^substate main)
    }
	-{(<b> ^predicate <p>) 
      (<p> ^name talked ^object <obj>)
    }
-->
	(<s> ^operator <o> + =)
   	(<o> ^name decide-talk ^type automatic ^drive social ^add-decision <d>)
	(<d> ^name talk ^substate main ^object <obj> ^deadline-time 600.0)
}

sp {talker*propose*talk
	(state <s> ^substate main ^decision <d>)
	(<d> ^name talk ^substate main ^object <obj>)
-->
	(<s> ^operator <o> +, =)
   	(<o> ^name talk ^substate talk ^drive social ^object <obj> ^result <r1> <r2>)
	(<r1> ^status succeed talk-failed ^remove-decision <d>)
	(<r2> ^status succeed ^add-predicate <pred>)
	(<pred> ^name talked ^object <obj> ^deadline-time 120.0)
}

# SAY HELLO

#sp {talker*propose*say-greet
#	(state <s> ^substate main ^beliefs <b>)
#	(<b> ^decision <d>)
#	(<d> ^name talk ^substate main ^object <obj>)
#	-{(<b> ^predicate <pred>) 
#	  (<pred> ^name greeted ^object <obj>)}
#-->
#	(<s> ^operator <o> +, =)
#   	(<o> ^name ask-greet ^substate ask ^drive social ^object <obj> ^topic greeting ^text |Hello, I am Sweetie Bot!| ^animation-tag greet)
#}
#
#sp {talker*propose*end-dialog 
#	(state <s> ^substate main ^beliefs.event <ev>)
#	(<ev> ^name talk-answer ^actor <obj> ^question-topic greeting -^processed end-dialog)
#-->
#	(<s> ^operator <op> +, =)
#	(<op> ^name end-dialog ^type cognition automatic ^add-predicate <pred> ^mark-processed <ev>)
#	(<pred> ^name greeted ^object <obj>)
#}

#

