#
# RESULTS AUTOMATED PROPAGADING
#
# 1. creates `^results` attribute of substate where
# 2. copy here results specification attached to superstate operator (`^result` attributes of superstate operator)
# 3. process result inheritance and mappings(in this case results are copied from 
# during processing of result maps creates `^result-map` attributes
#
# all created WMEs are i-supported
#


# elaborate `^results` attrubute
sp {results*elaborate*substate-results
	(state <s> ^substate ^superstate.operator)
-->
	(<s> ^results <r>)
}

# copy result from superstate operator
sp {results*elaborate*operator-results
	(state <s> ^superstate.operator <sop> ^results <r>)
	(<sop> ^result <result>)
-->
	(<r> ^result <result>)
}

# copy inherited results if they contain one status
sp {results*elaborate*operator-inherited-results-one-status
	(state <s> ^superstate <ss> ^results <r>)
	(<ss> ^operator.result-inherit <status> ^results.result <inherited-result>)
	(<inherited-result> ^status <status> -^status {<> <status>})
-->
	(<r> ^result <inherited-result>)
}

# convert inheritance to map if origianl result contains many `^status` attributes
sp {results*elaborate*operator-inherited-results-multiple-status
	(state <s> ^superstate <ss> ^results <r>)
	(<ss> ^operator.result-inherit <status> ^results.result <result>)
	(<result> ^status <status> ^status {<> <status>})
-->
	(<s> ^result-map <p>)
	(<p> ^old-result <result> ^new-result <new-result>)
	(<new-result> ^status <status>)
	(<r> ^result <new-result>)
}

# process result map

# 1. create result-map processing space, linked to old nad new result
sp {results*elaborate*operator-result-map*prepare
	(state <s> ^superstate <ss> ^results <r>)
	(<ss> ^operator.result-map <map> ^results.result <result>)
	(<map> ^to-status <old-status>)
	(<result> ^status <old-status>)
-->
	(<s> ^result-map <p>)
	(<p> ^map <map> ^old-result <result> ^new-result <new-result>)
	(<r> ^result <new-result>)
}

# 2. copy new status to new result
sp {results*elaborate*operator-result-map*copy-status
	(state <s> ^result-map <p>)
	(<p> ^map.status <new-status> ^new-result <new-result>)
-->
	(<new-result> ^status <new-status>)
}

# 3. copy attributes from old result to new
sp {results*elaborate*operator-result-map*copy-attributes
	(state <s> ^result-map <p>)
	(<p> ^old-result <old-result> ^new-result <new-result>)
	(<old-result> ^{<> status <attr>} <value>)
-->
	(<new-result> ^<attr> <value>)
}

# REGENERATE RESULTS ASSOTIATED WITH PROCESSE

sp {results*propose*regenerate
	(state <s> ^results <r> ^process.results {<> <r>})
-->
	(<s> ^operator <op> +)
	(<op> ^name results-regenerate ^type system)
}

sp {results*apply*regenerate
	(state <s> ^operator <op> ^results <new-results> ^process <pred>)
	(<op> ^name results-regenerate ^type system)
	(<pred> ^results <old-results>)
-->
	(<pred> ^results <old-results> -) 
	(<pred> ^results <new-results>) 
}

## old result map implementation: it creates o-supported operator agmentaton in superstate
#
## 1. create process space, linked to old nad new result
#sp {results*elaborate*operator-result-map*prepare
#	(state <s> ^superstate <ss> ^results <r>)
#	(<ss> ^operator.result-map <map> ^results.result <result>)
#	(<map> ^old-status <old-status>)
#	(<result> ^status <old-status>)
#-->
#	(<map> ^process <p>)
#	(<p> ^old-result <result> ^new-result <new-result>)
#	(<r> ^result <new-result>)
#}
#
## 2. copy new status to new result
#sp {results*elaborate*operator-result-map*copy-status
#	(state <s> ^superstate <ss>)
#	(<ss> ^operator.result-map <map>)
#	(<map> ^new-status <new-status> ^process.new-result <new-result>)
#-->
#	(<new-result> ^status <new-status>)
#}
#
## 3. copy attributes from old result to new
#sp {results*elaborate*operator-result-map*copy-attributes
#	(state <s> ^superstate <ss>)
#	(<ss> ^operator.result-map.process <p>)
#	(<p> ^old-result <old-result> ^new-result <new-result>)
#	(<old-result> ^{<> status <attr>} <value>)
#-->
#	(<new-result> ^<attr> <value>)
#}
