#
# APPLY RULES FOR AUTOMATIC BELIEF MANIPULATION OPERATORS
#

#
# ELABORATIONS
#

sp {automatic*elaborate*add-process-results
	(state <s> ^operator <op> ^results <r>)
	(<op> ^type automatic ^add-process <pred>)
-->
	(<pred> ^results <r>)
}

#
# WME ADDITITON
#

# add simple WME value
sp {automatic*apply*link-value
	(state <s> ^operator <op> ^beliefs <b> ^time.now <time>)
	(<op> ^type automatic ^parent <p> ^attribute <attr> ^link-value <value>)
-->
	(<p> ^<attr> <value>)
}

# copy i-supported structure with one level of attribution
sp {automatic*apply*copy-value-one-level
	(state <s> ^operator <op>)
	(<op> ^type automatic ^parent <p> ^attribute <attr> ^copy-value-one-level <value>)
-->
	(<p> ^<attr> (copy-one-level <value>))
}

# remove attribute with specific value
sp {automatic*apply*remove-value
	(state <s> ^operator <op>)
	(<op> ^type automatic ^parent <p> ^attribute <attr> ^remove-value {<> |__all__| <value>})
-->
	(<p> ^<attr> <value> -)
}

# remove all attributes
sp {automatic*apply**remove-all-values
	(state <s> ^operator <op>)
	(<op> ^type automatic ^parent <p> ^attribute <attr> ^remove-value __all__)
	(<p> ^<attr> <value>)
-->
	(<p> ^<attr> <value> -)
}

#
# BELIEF ADDITION
#

# make belief attributes o-supported 
# (It is necessary only in top state where i-supported operator agumentation being copied to top-state preserves i-support)
sp {automatic*apply*add-belief*o-support
	(state <s> ^top-state 1 ^operator <op>)
	(<op> ^type automatic ^{<<|add-predicate| |add-event| |add-process| |add-decision|>>} <pred>)
	(<pred> ^<attr> <value>)
-->
	(<pred> ^<attr> <value>)
}

# add predicate: create predicate WME, add `^initiated-at`, add to pending 
sp {automatic*apply*add-predicate
	(state <s> ^operator <op> ^beliefs <b> ^beliefs-stable.pending <bs> ^time.now <time>)
	(<op> ^type automatic ^add-predicate <pred>)
	(<pred> ^name <name>)
-->
	(<b> ^predicate <pred>)
	(<pred> ^initiated-at <time>)
	(<b> ^event <ev>)
	(<ev> ^name <name> ^reason initiated ^predicate <pred> ^initiated-at <time>)
	(<bs> ^predicate <pred>)
}

# add predicate: add to history
sp {automatic*apply*add-predicate*history
	(state <s> ^operator <op> ^predicates <pred-pool>)
	(<op> ^type automatic ^add-predicate <pred>)
	(<pred> ^memorization-time <mem-time>)
-->
	(<pred-pool> ^predicate <pred>)
}

# add process: create predicate WME, add `^initiated-at`, add to pending 
sp {automatic*apply*add-process
	(state <s> ^operator <op> ^beliefs <b> ^beliefs-stable.pending <bs> ^time.now <time>)
	(<op> ^type automatic ^add-process <pred>)
	(<pred> ^name <name>)
-->
	(<b> ^process <pred>)
	(<pred> ^initiated-at <time>)
	(<b> ^event <ev>)
	(<ev> ^name <name> ^reason initiated ^process <pred> ^initiated-at <time>)
	(<bs> ^process <pred>)
}

# add process: add to history
sp {automatic*apply*add-process*history
	(state <s> ^operator <op> ^predicates <pred-pool>)
	(<op> ^type automatic ^add-process <pred>)
	(<pred> ^memorization-time <mem-time>)
-->
	(<pred-pool> ^process <pred>)
}

# add decision: create predicate WME, add `^initiated-at`
sp {automatic*apply*add-decision
	(state <s> ^operator <op> ^beliefs <b> ^beliefs-stable.pending <bs> ^time.now <time>)
	(<op> ^type automatic ^add-decision <pred>)
	(<pred> ^name <name>)
-->
	(<b> ^decision <pred>)
	(<pred> ^initiated-at <time>)
	(<b> ^event <ev>)
	(<ev> ^name <name> ^reason initiated ^decision <pred> ^initiated-at <time>)
	(<bs> ^decision <pred>)
}

# add event: create predicate WME, add `^initiated-at`
sp {automatic*apply*add-event
	(state <s> ^operator <op> ^beliefs <b> ^time.now <time>)
	(<op> ^type automatic ^add-event <ev>)
-->
	(<b> ^event <ev>)
	(<ev> ^initiated-at <time>)
}

# add event: add to history
sp {automatic*apply*add-event*history
	(state <s> ^operator <op> ^events <ev-pool>)
	(<op> ^type automatic ^add-event <ev>)
	(<ev> ^memorization-time <mem-time>)
-->
	(<ev-pool> ^event <ev>)
}

#
# BELIEFS REMOVAL
#

# remove predicate: delete WME, add `^terminated-at`
sp {automatic*apply*remove-predicate
	(state <s> ^operator <op> ^beliefs <b> ^time.now <time>)
	(<op> ^type automatic ^remove-predicate <pred>)
-->
	(<b> ^predicate <pred> -)
	(<pred> ^terminated-at <time>)
	(<b> ^event <ev>)
	(<ev> ^name <name> ^reason terminated ^predicate <pred> ^initiated-at <time>)
}

# remove process: delete WME, add `^terminated-at`
sp {automatic*apply*remove-process
	(state <s> ^operator <op> ^beliefs <b> ^time.now <time>)
	(<op> ^type automatic ^remove-process <pred>)
-->
	(<b> ^process <pred> -)
	(<pred> ^terminated-at <time>)
	(<b> ^event <ev>)
	(<ev> ^name <name> ^reason terminated ^process <pred> ^initiated-at <time>)
}

# remove decision: delete WME
sp {automatic*apply*remove-desicion
	(state <s> ^operator <op> ^beliefs <b>)
	(<op> ^type automatic ^remove-decision <d>)
-->
	(<b> ^decision <d> -)
	(<b> ^event <ev>)
	(<ev> ^name <name> ^reason terminated ^decision <pred> ^initiated-at <time>)
}

#
# RETVAL SUPPORT
#
sp {automatic*elaborate*retval
	(state <s> ^operator <op>)
	(<op> ^type automatic ^retval-name <name> ^reval-attribute <attr> ^<name> <value> ^{<<|add-predicate| |add-process| |add-decision|>>} <belief>)
-->
	(<belief> ^<attr> <value>)
}

#
# TAGS
#

# add tag
sp {automatic*apply*mark-processed
	(state <s> ^operator <op>)
	(<op> ^type automatic ^name <name> ^mark-processed <ev>)
-->
	(<ev> ^processed <name>)
}

#
# CHANGE ATTRIBUTES SUPPORT
#
# i-supported WME created in top state preserves i-support after being copied to beliefs
# so if results from top state is linked to process they must be made o-supported
#

sp {automatic*apply*make-top-state-results-o-supported
	(state <s> ^operator <op>)
	(<op> ^type automatic ^add-process.results.result <result>)
	(state <ss> ^top-state 1 ^operator.result <result>)
	(<result> ^<attr> <value>)
-->
	(<result> ^<attr> <value>)
}

sp {automatic*apply*make-top-state-results-o-supported-level-two
	(state <s> ^operator <op>)
	(<op> ^type automatic ^add-process.results.result <result>)
	(state <ss> ^top-state 1 ^operator.result <result>)
	(<result> ^{<<|add-predicate| |add-event| |add-process| |add-decision|>>} <pred>)
	(<pred> ^<attr> <value>)
-->
	(<pred> ^<attr> <value>)
}
