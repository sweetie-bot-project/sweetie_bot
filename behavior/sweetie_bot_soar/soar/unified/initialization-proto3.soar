# INITIALIZATION


#
# FIRST STAGE
#
# create basic structures in memory
#

sp {initialization*apply*debug-time
	(state <s> ^name initialization ^operator <op> -^io.input-link.clock)
	(<op> ^name initialization ^stage 1)
-->
	(<s> ^time <t>)
	(<t> ^now 100)
	(<t> ^cycle 1)
}

# SECOND STAGE
#
# put things into memory
#
sp {initialization*apply*drives
	(state <s> ^name initialization ^operator <op> ^mem <m>)
	(<op> ^name initialization ^stage 2)
-->
	(<m> ^drive <d1> <d2> <d3> <d4> <d5> <d6>)
	(<d1> ^name movement ^activation 0 ^importance 2) 
	(<d2> ^name obey ^activation 0 ^importance 8)
	(<d3> ^name security ^activation 0 ^importance 10)
	(<d4> ^name curiosity ^activation 0 ^importance 5) 
	(<d5> ^name social ^activation 0 ^importance 6) 
	(<d6> ^name dummy ^activation 0 ^importance 11) 
}

sp {initialization*apply*flexbe-commands
	(state <s> ^name initialization ^operator <op> ^mem <m>)
	(<op> ^name initialization ^stage 2)
-->
	(<m> ^flexbe-command <c1> <c2> <c3> <c4> <c5>)
	(<c1> ^name ExecuteLookAt ^param id label type timeout)
	(<c2> ^name ExecuteCompoundAction ^param action_name)
	(<c3> ^name ExecuteStepSequence ^param action_name)
	(<c4> ^name ExecuteJointTrajectory ^param joint_trajectory is_relative)
	(<c4> ^name ExecuteJointTrajectoryAndSay ^param joint_trajectory text text_delay is_relative)
	(<c5> ^name ExecuteSetPose ^param pose)
}


sp {initialization*apply*compound*action
	(state <s> ^name initialization ^operator <op> ^mem <m>)
	(<op> ^name initialization ^stage 2)
-->
	(<m> ^compound-action <c5> <c6> <c7>)
	(<c5> ^name push_up ^tag alone)
	(<c6> ^name show_off ^tag alone)
	(<c7> ^name head_bored ^tag alone)
}

sp {initialization*apply*joint-trajectory
	(state <s> ^name initialization ^operator <op> ^mem <m>)
	(<op> ^name initialization ^stage 2)
-->
	(<m> ^joint-trajectory <c1> <c2> <c3> <c4> <c5> <c6> <c7> <c8> <c9>)
	(<c1> ^name head_node ^tag confirmation greeting pleased ^tag general ^tag talk ^relative yes)
	(<c2> ^name head_shake ^tag rejection disappointed ^tag talk ^relative yes)
	(<c3> ^name head_suprised ^tag question surprise  ^tag general ^tag talk ^relative yes)
	(<c4> ^name head_look_around ^tag long ^tag general ^tag talk)
	(<c5> ^name hoof_stamp ^tag rejection angry ^tag talk)
	(<c6> ^name greeting ^tag greeting brohoof ^tag talk)
	(<c7> ^name get_unconscious ^tag faint ^tag talk)
	(<c8> ^name dance_stamp ^tag dance ^tag talk)
}

sp {initialization*apply*animation-tag-emotion-mapping
  (state <s> ^name initialization ^operator <op> ^mem <m>)
  (<op> ^name initialization ^stage 2)
-->
  (<m> ^emotion <c1> <c2> <c3> <c4> <c5> <c6> <c7> <c8> <c9> <c10> <c11> <c12> <c13>)
  (<c1> ^name begging_look ^tag begging)
  (<c2> ^name unamused_look ^tag rejection disappointed)
  (<c3> ^name surprised_look ^tag surprise rejection greeting brohoof)
  (<c4> ^name pleasure_look ^tag pleased)
  (<c5> ^name happy_look ^tag pleased confirmation dance)
  (<c6> ^name tender_look ^tag pleased greeting brohoof)
  (<c7> ^name scared_look ^tag scared)
  (<c8> ^name very_scared_look ^tag scared)
  (<c9> ^name raised_right_eyebrow_look ^tag question)
  (<c10> ^name raised_left_eyebrow_look ^tag question)
  (<c11> ^name evil_look ^tag angry rejection)
  (<c12> ^name sad_look ^tag sad disappointed)
  (<c13> ^name normal ^tag general confirmation rejection question greeting brohoof long none)
}

#sp {initialization*apply*compound*action
#	(state <s> ^name initialization ^operator <op> ^mem <m>)
#	(<op> ^name initialization ^stage 2)
#-->
#	(<m> ^compound-action <c1> <c2> <c3> <c4> <c5> <c6> <c7>)
#	(<c1> ^name greeting_acquitance_procedure ^tag greet ^tag talk)
#	(<c2> ^name greeting_friendship_programs ^tag greet ^tag talk)
#	(<c3> ^name point_do_not_touch ^tag angry ^topic comfort-zone ^tag talk)
#	(<c4> ^name hoof_stamp_do_you_want_attention ^tag angry ^tag talk)
#	(<c5> ^name prance_maximum_fun ^tag fun ^tag general ^tag alone)
#	(<c6> ^name menace ^tag angry ^tag alone)
#	(<c7> ^name head_ask_about_sister ^tag talk)
#}
#
#sp {initialization*apply*joint-trajectory
#	(state <s> ^name initialization ^operator <op> ^mem <m>)
#	(<op> ^name initialization ^stage 2)
#-->
#	(<m> ^joint-trajectory <c1> <c2> <c3> <c4> <c5>)
#	(<c1> ^name head_node ^tag confirmation ^tag talk ^relative yes)
#	(<c2> ^name head_shake ^tag rejection ^tag talk ^relative yes)
#	(<c3> ^name head_suprised ^tag question ^tag surprise  ^tag general ^tag talk ^relative yes)
#	(<c4> ^name greeting ^tag greet ^tag general ^tag talk)
#	(<c5> ^name applause ^tag confirmation rejection ^tag talk)
#}

#
# FINISH INITIALIZATION
#
# set state name

sp {apply*initialization-second-stage*name
	(state <s> ^name initialization ^operator <op>)
	(<op> ^name initialization ^stage 3)
-->
	(<s> ^substate general) 
}
