#
# LOOK AT
#
# DESCRIPTION
#
# Focus attention on givaen object and enshure that object is in viewfield for specific time.
#
# DECISION OPERATOR
#
# (<op> ^name @name@ ^substate look-at ^object <obj> ^delay <delay>  ^timeout <timeout>)
#
# Look at <obj>.  Result it success if object is visible and is located in center of viewfield for at least <delay> time (may fire multiple times)
# If success condition is not met not after <timeout> seconds then result is failure. 
#
# RESULT STATUSES
#
# * failed -- <timeout> seconds has passed but object is still is not center of view.
#
# SIDE EFFECTS
#
# Output link: 
#
# flexbe behavior 'ExecuteLookAt':
#   * succeed or failed event does not stop flexbe behavior execution.
#   * behavior timeout is 1.0 seconds greater then <delay> value.
#
# Processes:
#
# * (^name focusing-at ^substate look-at ^object <obj> ^deadline-time <timeout>) --- trying to focus onto object. 
#
# Predicates:
#
# * (^name looking-at ^object <obj> ^focusing-proccess <proc>) --- object is in focus for for at least <delay> seconds.
# * (^name looking-at-verifing ^object <obj> ^focusing-proccess <proc>) --- object is in focus.
#

# ELABOARTIONS

# detect "object in the center" situation
sp {look-at*elaborate*looking-at-verifing
	(state <s> ^top-state 1 ^beliefs <b>)
	(<b> ^process <proc>)
	(<proc> ^name focusing-at ^object <obj> ^delay <delay>)
	(<obj> ^input-link <il>)
	(<il> ^visible now ^yaw-head center)
-->
	(<b> ^predicate <pred>)
	(<pred> ^name looking-at-verifing ^object <obj> ^focusing-proccess <proc>)
}

sp {look-at*elaborate*looking-at-verifing-treshhold
	(state <s> ^top-state 1 ^beliefs.predicate <pred>)
	(<pred> ^name looking-at-verifing ^initiated-at <time> ^focusing-proccess.delay <delay>)
-->
	(<pred> ^delay-time (+ <time> <delay>))
}

# detect "looking-at" situation: object is in fous 
sp {look-at*elaborate*looking-at
	(state <s> ^top-state 1 ^beliefs <b> ^time <clock>)
	(<b> ^predicate <pred>)
	(<pred> ^name looking-at-verifing ^delay-time <delay-time> ^object <obj> ^focusing-proccess <proc>)
	-(<clock> ^now {<= <delay-time>})
-->
	(<b> ^predicate <pred-new>)
	(<pred-new> ^name looking-at ^object <obj> ^focusing-proccess <proc>)
}

# DECISION OPERATORS

# start flexbe behavior and create focusing-at process
sp {look-at*propose*start-look-at-behavior
	(state <s> ^substate look-at ^args <args>)
	(<args> ^object <obj> ^delay <delay> ^timeout <timeout>)
	(<obj> ^id <id> ^label <label> ^type <type>)
-->
	(<s> ^operator <op> +)
	(<op> ^name focusing-at ^substate flexbe ^process-args <a> ^interruptable hard)
	(<a> ^behavior ExecuteLookAt ^id <id> ^label <label> ^type <type> ^timeout (+ <delay> 1.0) ^delay <delay> ^object <obj>)
}

# COGNITION OPERATORS

# detect look-at failed situation: focusing-at is expired (due to timeout, abort or execution failure) but looking-at does not holds
sp {look-at*propose*completion-failed
	(state <s> ^bottom-state 1 ^beliefs.event <ev> ^beliefs-stable <bs>)
	(<ev> ^name focusing-at ^reason {<< |deadline| |terminated| >>} -^processed look-at-focus-failed ^process <proc>)
	-{(<bs> ^predicate <pred>)
	  (<pred> ^name looking-at ^focusing-proccess <proc>)
    }
	(<proc> ^subprocess-of <sp>)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name look-at-focus-failed ^type cognition automatic ^finish-status failed ^finish-process <sp> ^mark-processed <ev>) 
}

# detect look-at succeed situation: focusing-at is expired (due to timeout, abort or execution failure) but looking-at does not holds
sp {look-at*propose*completion-succeed
	(state <s> ^bottom-state 1 ^beliefs.event <ev> ^beliefs-stable <bs>)
	(<ev> ^name focusing-at ^reason {<< |deadline| |terminated| >>} -^processed look-at-focus-succeed ^process <proc>)
	(<bs> ^predicate <pred>)
	(<pred> ^name looking-at ^focusing-proccess <proc>)
	(<proc> ^subprocess-of <sp>)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name look-at-focus-succeed ^type cognition automatic ^finish-status succeed ^finish-process <sp> ^mark-processed <ev>) 
}
