# VERBOLIZE SUBSTATE
#  
# DESCRIPTION
#
# Say phrase with animation.
#
# DECISION OPERATOR
#
# (<op> ^name @name@ ^substate verbolize ^process-args <args>) 
#   (<args> ^object <obj> ^topic <topic> ^text <text> ^animation-tag <tag>)
#
# Say person <obj> about <topic> with <text> and using animation tagged with <tag>.
#
# PROCESS RESULT STATUSES
#
# Substate aguments supplied process with flexbe substate arguments and reuse it as flexbe substate process.
# Result statuses are the same as for flexbe sustate.
#
# SIDE EFFECTS
#
# Process:
#
# * (^name talk-said ^object <object> ^topic <topic>) --- said to <object> about <topic>.
#

# DECISION RULES

# PERFORM TEXT ACTION

# start text action and terminate verbolization if it is finished
sp {verbolize*propose*text-action
	(state <s> ^substate verbolize -^performing-text-action ^args <args> ^process <proc>)
	(<args> ^text <text> ^object <obj> ^topic <topic>)
	(<proc> -^text-action-status)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name performing-text-action ^substate text-action ^process-args <a> ^utility 25)
    (<a> ^type |voice/say| ^command <text> ^result <r>)
	(<r> ^status succeed ^parent <proc> ^attribute text-action-status ^link-value succeed)
}

#sp {verbolize*propose*on-text-action-succeed
#	(state <s> ^bottom-state 1 ^beliefs <b>)
#	(<b> ^event <ev>)
#	(<ev> ^substate text-action ^status succeed ^process.text <text>)
#	(<b> ^process <proc>)
#	(<proc> ^substate verbolize ^text <text>)
#-->
#	(<s> ^operator <op> +, =)
#	(<op> ^name on-text-action-succeed ^type cognition automatic ^parent <proc> ^attribute text-action-status ^link-value succeed)
#}

# SELECT AND PERFORM ANIMATION

# select general animations
sp {verbolize*elaborate*animation-general
	(state <s> ^substate verbolize ^mem.joint-trajectory <anim>)
	(<anim> ^tag talk general)
-->
	(<s> ^animation <anim>)
}

# select all matching animations
sp {verbolize*elaborate*animation-matching-tag
	(state <s> ^substate verbolize ^args.animation-tag <tag> ^mem.joint-trajectory <anim>)
	(<anim> ^tag talk <tag>)
-->
	(<s> ^animation <anim>)
}

# propose animations, agument process predicate if animation succeed
sp {verbolize*propose*animation
	(state <s> ^substate verbolize -^performing-animation ^animation <anim> ^process <proc>)
	(<anim> ^name <animation-name>)
	(<proc> -^animation-status)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name performing-animation ^substate flexbe ^animation <anim> ^process-args <a>)
    (<a> ^behavior ExecuteJointTrajectory ^joint_trajectory <animation-name> ^result <r>)
	(<r> ^status succeed invalid_pose failed ^parent <proc> ^attribute animation-status ^link-value succeed)
}

# elaborate is_relative ExecuteJointTrajectory parameter
sp {verbolize*elaborate*say-execute-animation-is-relative
	(state <s> ^substate verbolize ^operator <op> +)
	(<op> ^name performing-animation ^process-args <args> ^animation.relative) 
-->
	(<args> ^is_relative True)
}

# WAITING 
# TODO: correct implementation of parallel processe: both substates should be placed in stack

# look at speaker if animation is finished
sp {verbolize*propose*looking-at-speaker
	(state <s> ^substate verbolize ^process <proc>)
	(<proc> ^animation-status succeed ^object <obj>)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name looking-at-speaker ^substate look-at ^process-args <a> ^utility 20)
	(<a> ^object <obj> ^timeout 5.0 ^delay 1.0)
}

# waiting is worst choice
sp {verbolize*elaborate*waiting
	(state <s> ^substate verbolize)
-->
	(<s> ^operator <op> +, <)
	(<op> ^name waiting ^substate wait)
}

# PREFERENCES 
#
# Utility:
# perform aniamtion 
#     two matching tags --- 32
#     one matching tags --- 31
#     no  matching tags --- 30
# perform text action --- 25
# looking at speaker --- 20
# waiting --- worst
#

# calculate animation utility: two tags
sp {verbolize*elaborate*animation-two-tag-utility
	(state <s> ^substate verbolize ^operator <op> + ^args <args>)
	(<args> ^animation-tag <tag1> ^animation-tag {<> <tag1> <tag2>})
	(<op> ^name performing-animation ^animation <anim>)
	(<anim> ^tag <tag1> ^tag <tag2>)
-->
	(<op> ^utility 32)
}

# calculate animation utility: one tag
sp {verbolize*elaborate*animation-one-tag-utility
	(state <s> ^substate verbolize ^operator <op> + ^args.animation-tag <tag>)
	(<op> ^name performing-animation ^animation.tag <tag> -^utility 32)
-->
	(<op> ^utility 31)
}

# calculate animation utility: no tags
sp {verbolize*elaborate*animation-no-tag-utility
	(state <s> ^substate verbolize ^operator <op> +)
	(<op> ^name performing-animation -^utility 32 -^utility 31)
-->
	(<op> ^utility 30)
}

# prefer operator with higher utility
sp {verbolize*prefer*utility
	(state <s> ^substate verbolize ^operator <op1> + ^operator {<> <op1> <op2>} ^args <args>)
	(<op1> ^utility <value>)
	(<op2> ^utility {< <value>})
-->
	(<s> ^operator <op1> > <op2>)
}

# COGNITION OPERTORS

# assume verbolize process finished if animation and text-action succeed
sp {verbolize*propose*terminate-verbolize
	(state <s> ^bottom-state 1 ^beliefs <b>)
	(<b> ^process <proc>)
	(<proc> ^substate verbolize ^text-action-status succeed ^animation-status ^object <obj> ^topic <topic>)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name terminate-verbolize ^type cognition automatic ^finish-process <proc> ^finish-status succeed ^add-event <ev-new>)
	(<ev-new> ^name talk-said ^object <obj> ^topic <topic> ^memorization-time 3600.0)
}
