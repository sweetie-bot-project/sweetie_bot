#
# PREDIACTES VERBOLIZATION
#
# Utility levels:
#
# 1. 20 --- general predicates verbolization, second verbolization
# 2. 20 --- general questions
# 3. 40-50 --- greeting and making acquitance
# 4. 70 --- general knowledge additions
# 5. 80 --- reactions
#
	
# GENERAL KNOWLEDGE

# if quest topic is ignored then stop quest
sp {quest*propose*ignor-topic-terminate-quest
	(state <s> ^bottom-state 1 ^beliefs <b>)
	(<b> ^predicate <pred1> <pred2>)
	(<pred1> ^name quest ^object <obj>)
	(<pred2> ^name ignor-topic ^actor <obj> ^topic quest)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name ignor-topic-terminate-quest ^type cognition automatic ^remove-predicate <pred1>)
}

# VERBOLIZATION RULES

# ask if speaker is interest in quest
sp {quest*elaborate*ask-about-quest
	(state <s> ^substate talk ^beliefs <b> ^object <obj> ^verbolization <v>)
  -{(<b> ^predicate <pred1>) (<pred1> ^name quest ^object <obj>)}
  -{(<b> ^predicate <pred2>) (<pred2> ^name quest-finished ^actor <obj>)}
-->
	(<v> ^frame <f>)
	(<f> ^topic ask-about-quest ^utility 20 ^type question ^animation-tag question ^text |Хочешь поиграть со мной в квест?|)
}

# ask about quest again
sp {quest*elaborate*ask-about-quest-again
	(state <s> ^substate talk ^beliefs <b> ^object <obj> ^verbolization <v>)
  	(<b> ^predicate <pred>) 
	(<pred> ^name quest-finished ^actor <obj> ^ending <ending>)
-->
	(<v> ^frame <f>)
	(<f> ^topic ask-about-quest ^utility 20 ^type question ^animation-tag question ^text (concat |В прошлый раз в квесте ты получил концовку "| <ending> |". Хочешь попробовать снова?|))
}

sp {talk-answered*elaborate*ask-about-quest*reaction
	(state <s> ^substate talk-answered ^question-topic ask-about-quest)
-->
	(<s> ^reaction-conditional <r1> <r2>)
	(<r1> ^answer-topic yes ^topic reaction-speaker-agreed-to-quest ^type reaction ^text |Отлично! Тогда я начинаю!| ^animation-tag confirmation)
	(<r2> ^answer-topic no ^topic reaction-speaker-agreed-to-quest ^type reaction ^text |Ты явно боишься получить плохую концовку.| |Не хочешь -- как хочешь.| ^animation-tag rejection)
}

sp {talk-answered*propose*ask-about-quest*yes
	(state <s> ^substate talk-answered ^question-topic ask-about-quest ^answer-topic yes ^actor <obj> ^actions <a>)
-->
	(<a> ^add-predicate <pred>)
	(<pred> ^name quest ^object <obj> ^scene meet-sweetie ^segment-id 0 ^scene-frame <f> ^deadline-time 600.0)
}

sp {talk-answered*propose*ask-about-quest*yes*terminate-quest-finished
	(state <s> ^substate talk-answered ^question-topic ask-about-quest ^answer-topic yes ^actor <obj> ^beliefs <b> ^actions <a>)
  	(<b> ^predicate <pred>) 
	(<pred> ^name quest-finished ^actor <obj>)
-->
	(<a> ^remove-predicate <pred>)
}

# QUEST SEGMENT VERBOLIZATION

# translate scene segment to verbolization frame
sp {quest*elaborate*verbolize-current-segment
	(state <s> ^substate talk ^beliefs.predicate <pred> ^object <obj> ^verbolization <v>)
	(<pred> ^name quest ^object <obj> ^scene <scene> ^segment-id <id> ^scene-frame.segment <segment>)
   	(<segment> ^id <id> ^type <type>)
-->
	(<v> ^frame <f>)
	(<f> ^topic quest ^utility 30 ^type <type> ^scene <scene> ^quest-segment <segment>)
}

# copy text data to frame
sp {quest*elaborate*verbolize-current-segment*parts
	(state <s> ^substate talk ^verbolization.frame <f>)
	(<f> ^topic quest ^quest-segment <segment>)
	(<segment> ^{<<|text| |sound| |animation-tag| |character|>> <attr>} <value>)
-->
	(<f> ^<attr> <value>)
}

# EVENT PROCESSING

# if reaction segment was verbolized proceed to next segment: increase id by one
sp {talk-said*propose*reaction-next-segment
	(state <s> ^substate talk-said ^topic quest ^object <obj> ^beliefs.predicate <pred> ^actions <a>)
	(<pred> ^name quest ^object <obj> ^segment-id <id> ^scene-frame.segment <segment>)
   	(<segment> ^id <id> ^type reaction -^next-scene ^next-id <next-id>)
-->
	(<a> ^parent <pred> ^attribute segment-id  ^remove-value <id> ^link-value <next-id>)
}

sp {talk-said*propose*reaction-next-scene
	(state <s> ^substate talk-said ^topic quest ^object <obj> ^beliefs.predicate <pred> ^actions <a>)
	(<pred> ^name quest ^object <obj> ^scene <scene> ^segment-id <id> ^scene-frame.segment <segment>)
   	(<segment> ^id <id> ^type reaction ^next-scene <next-scene>)
-->
	(<a> ^parent <pred> ^attribute scene ^remove-value <scene> ^link-value <next-scene>)
	(<a> ^parent-2 <pred> ^attribute-2 segment-id ^remove-value-2 <id> ^link-value-2 0)
}

# if final reaction segment was verbolized end the quest: remove quest predicate and add quest-finished predicate
sp {talk-said*propose*reaction-ending-segment
	(state <s> ^substate talk-said ^topic quest ^object <obj> ^beliefs.predicate <pred> ^actions <a>)
	(<pred> ^name quest ^object <obj> ^segment-id <id> ^scene-frame.segment <segment>)
   	(<segment> ^id <id> ^type reaction ^ending <ending>)
-->
	(<a> ^remove-predicate <pred> ^add-predicate <pred1>)
   	(<pred1> ^name quest-finished ^actor <obj> ^ending <ending>)
}

# if valid answer was received assume question answered and proceed to next scene
sp {talk-answered*propose*question-valid-answer
	(state <s> ^substate talk-answered ^question-topic quest ^answer-topic <answer> ^actor <obj> ^beliefs.predicate <pred> ^actions <a>)
	(<pred> ^name quest ^object <obj> ^scene <scene> ^segment-id <id> ^scene-frame.choice <choice>)
   	(<choice> ^answer-topic <answer> ^next-scene <next-scene>)
-->
	(<s> ^conclusion answer-specific-reaction)
	(<a> ^parent <pred> ^attribute scene ^remove-value <scene> ^link-value <next-scene>)
	(<a> ^parent-2 <pred> ^attribute-2 segment-id ^remove-value-2 <id> ^link-value-2 0)
}

# if question is ignored procced to ignore-id segment
sp {talk-answered*propose*question-ignored
	(state <s> ^substate talk-ignored ^question-topic quest ^actor <obj> ^beliefs.predicate <pred> ^actions <a>)
	(<pred> ^name quest ^object <obj> ^segment-id <id> ^scene-frame.segment <segment>)
   	(<segment> ^id <id> ^type reaction ^ignor-id <next-id>)
-->
	(<a> ^parent <pred> ^attribute segment-id  ^remove-value <id> ^link-value <next-id>)
}

