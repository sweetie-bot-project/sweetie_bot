#
# TALKING
#
# 1. elaborate evalution-frames for possible answers
# 2. decide waht to do
# 3. perform ask/say 
#

# ELABORATIONS 

# create basic agumentation for talk substate
sp {talk*elaborate*substate
	(state <s> ^substate talk ^args <args>)
	(<args> ^object <obj>)
-->
	(<s> ^object <obj> ^verbolization <v> ^talk-said <ev-pool>)	
}

# propagate verbolization to the bottom state
sp {talk*elaborate*verbolization
	(state <s> ^superstate.verbolization <v>)
-->
	(<s> ^verbolization <v>)	
}

# last-said-topic
sp {talk*elaborate*last-said-topic
	(state <s> ^substate talk ^beliefs.predicate <pred> ^object <obj>)
	(<pred> ^name talk-last-said-topic ^topic <topic> ^object <obj>)
-->
	(<s> ^last-said-topic <topic>)
}

# looking-at 
sp {talk*elaborate*looking-at
	(state <s> ^substate talk ^beliefs-stable.predicate <pred> ^object <obj>)
	(<pred> ^name looking-at ^object <obj>)
-->
	(<s> ^looking-at yes)
}

# relevant talk-said events
sp {talk-event*elaborate-recent-talk-said-events
	(state <s> ^substate talk ^object <obj> ^events.event <ev> ^time.recently <time> ^talk-said <c>)
	(<ev> ^name talk-said ^object <obj> ^initiated-at {>= <time>})	
-->
	(<c> ^event <ev>)
}

# DECISION RULES

# propose question verbolization
sp {talk*propose*question-verbolization
	(state <s> ^substate talk ^looking-at -^verbolizing -^waiting-answer ^verbolization.frame <q> ^object <obj> ^process <sp>)
	(<q> ^type question ^topic <topic> ^utility <utility>)
-->
	(<s> ^operator <o> +)
	(<o> ^name question-verbolization ^substate verbolize ^utility <utility> ^process-link <proc> ^frame <q>)
	(<proc> ^name verbolizing ^substate verbolize ^object <obj> ^topic <topic> ^type question ^result <res-succeed>)
	(<res-succeed> ^status succeed ^add-process <proc-result>)
	(<proc-result> ^name waiting-answer ^object <obj> ^topic <topic> ^utility <utility> ^type question ^deadline-time 12.0 ^subprocess-of <sp>)
	(<res-succeed> ^print (concat |TALK: VERBOLIZED QUESTION | <topic> (crlf)))
}

# propose statement verbolization: statement can be vebolized even if we are waiting answer
sp {talk*propose*statement-verbolization
	(state <s> ^substate talk ^looking-at -^verbolizing -^waiting-answer  ^verbolization.frame <q> ^object <obj> ^process <sp>)
	(<q> ^type statement ^topic <topic> ^utility <utility>)
-->
	(<s> ^operator <o> +)
	(<o> ^name statement-verbolization ^substate verbolize ^utility <utility> ^process-link <proc> ^frame <q>)
	(<proc> ^name verbolizing ^substate verbolize ^object <obj> ^topic <topic> ^type statement ^result <res-succeed>)
	(<res-succeed> ^status succeed ^add-process <proc-result> )
	(<proc-result> ^name waiting-answer ^object <obj> ^topic <topic> ^utility <utility> ^type statement ^deadline-time 6.0 ^subprocess-of <sp>)
	(<res-succeed> ^print (concat |TALK: VERBOLIZED STATEMENT | <topic> (crlf)))
}

# propose reaction verbolization
sp {talk*propose*reaction-verbolization
	(state <s> ^substate talk ^looking-at -^verbolizing ^verbolization.frame <q> ^object <obj>)
	(<q> ^type reaction ^topic <topic> ^utility <utility>)
-->
	(<s> ^operator <o> +)
	(<o> ^name reaction-verbolization ^substate verbolize ^utility <utility> ^process-link <proc> ^frame <q>)
	(<proc> ^name verbolizing ^substate verbolize ^object <obj> ^topic <topic> ^type reaction ^result <res-succeed>)
	(<res-succeed> ^status succeed ^print (concat |TALK: VERBOLIZED REACTION | <topic> (crlf)))
}

# copy verbolization frame attributes
# TODO: pass link to verbolization frame
sp {talk*elaborate*verbolization-attributes
	(state <s> ^substate talk ^operator <op> +)
	(<op> ^substate verbolize ^process-link <proc> ^frame <q>)
	(<q> ^{<<|text| |animation-tag| |sound| |scene| |character|>> <attr>} <value>)
-->
	(<proc> ^<attr> <value>)
}

# wait until verbolization process is finished
sp {talk*propose*wait-verbolization
	(state <s> ^substate talk ^verbolizing <proc>)
-->
	(<s> ^operator <o> +, =)
	(<o> ^name wait-verbolization ^substate verbolize ^process-link <proc>)
}

# wait for speaker reaction on question/statement, emit talk-failed if speaker is missing
sp {talk*propose*waiting-answer
	(state <s> ^substate talk ^waiting-answer <proc>)
	(<proc> ^object <obj> ^topic <topic> ^utility <utility> ^type {<<|question| |statement|>>})
-->
	(<s> ^operator <op> +, =)
	(<op> ^name waiting-answer-look-at ^substate look-at ^utility <utility> ^process-args <a>)
	(<a> ^timeout 5.0 ^delay 1.0 ^object <obj> ^result <res-failed>)
	(<res-failed> ^status failed ^add-event <ev1>)
	(<ev1> ^name talk-failed ^actor <obj> ^topic <topic>)
}

# simply looking at speaker as the worst choice
sp {talk*propose*looking-at-speaker
	(state <s> ^substate talk ^object <obj>)
-->
	(<s> ^operator <op> +, <)
	(<op> ^name looking-at-speaker ^substate look-at ^process-args <a>)
	(<a> ^object <obj> ^timeout 5.0 ^delay 1.0)
}

# finding-speaker if he is missing
sp {talk*propose*search-missing-speaker
	(state <s> ^substate talk ^beliefs.predicate <proc> ^object <obj> ^verbolization.frame <f>)
	(<proc> ^name missing-speaker ^object <obj>)
	(<f> ^topic missing-speaker ^text <text>)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name search-missing-speaker ^substate flexbe ^process-args <a> ^utility 80 ^interruptable hard)
	(<a> ^object <obj> ^behavior ExecuteJointTrajectoryAndSay ^joint_trajectory |head_look_around| ^text <text>)
}

# PREFERENCES

# prefer verbolization operator with greater utility
sp {talk*prefer*say-operator-with-greater-utility
	(state <s> ^substate talk ^operator <op1> + ^operator {<> <op1> <op2>} +)
	(<op1> ^utility <utility>)
	(<op2> ^utility {< <utility>})
-->
	(<s> ^operator <op1> > <op2>)
}

# waiting is preferable over the talk verbolization with same utility
sp {talk*prefer*waiting-operators
	(state <s> ^substate talk ^operator <op1> + ^operator {<> <op1> <op2>} +)
	(<op1> ^substate look-at ^utility <utility>)
	(<op2> ^substate verbolize ^utility <utility>)
-->
	(<s> ^operator <op1> > <op2>)
}

# postponed topic is preferable
sp {talk*prefer*postponed-topics
	(state <s> ^substate talk ^operator <op1> + ^operator {<> <op1> <op2>} + ^object <obj> ^beliefs.predicate <pred>)
	(<pred> ^name talk-postponed-topic ^topic <topic> ^object <obj>)
	(<op1> ^substate verbolize ^utility <utility> ^process-link.topic <topic>)
	(<op2> ^substate verbolize ^utility <utility> ^process-link.topic {<> <topic>})
-->
	(<s> ^operator <op1> > <op2>)
}

# searching missing speaker is preferable then trying to look at him
sp {talk*prefer*search-missing
	(state <s> ^substate talk ^operator <op1> + ^operator {<> <op1> <op2>} +)
	(<op1> ^name search-missing-speaker)
	(<op2> ^substate look-at)
-->
	(<s> ^operator <op1> > <op2>)
}

# TODO use impasse

#
# translate predicates to verbolization modifiers
#

sp {talk*elaborate*verbolization-ignor-topic
	(state <s> ^substate talk ^beliefs.predicate <pred> ^object <obj> ^verbolization <v>)
	(<pred> ^name ignor-topic ^topic <topic> ^actor <obj>)
-->
	(<v> ^ignor-topic <topic>)
}

# reject topic marked to be rejected with predicate
sp {talk*elaborate*verbolization-reject-topic
	(state <s> ^substate talk ^beliefs.predicate <pred> ^object <obj> ^verbolization <v>)
	(<pred> ^name reject-talk-topic ^topic <topic> ^object <obj>)
-->
	(<v> ^reject-topic <topic>)
}

#
# topic selection preferences
#

# reject topic via verbolization
sp {talk*prefer*reject-reject-topic 
	(state <s> ^substate talk ^operator <op> + ^verbolization.reject-topic <topic>)
	(<op> ^name {<<|question-verbolization| |statement-verbolization| |reaction-verbolization|>>} ^process-link.topic <topic>)
-->
	(<s> ^operator <op> ~)
}


# numeric preferences for verbolize operators
sp {talk*prefer*verbolization-numerical-base
	(state <s> ^substate talk ^operator <op> + )
	(<op> ^name {<<|question-verbolization| |statement-verbolization| |reaction-verbolization|>>})
-->
	(<s> ^operator <op> = 100)
}

# avoid ignored topics
sp {talk*prefer*verbolization-avoid-ignored-topics
	(state <s> ^substate talk ^operator <op> + ^verbolization.ignor-topic <topic>)
	(<op> ^name {<<|question-verbolization| |statement-verbolization| |reaction-verbolization|>>} ^process-link.topic <topic>)
-->
	(<s> ^operator <op> = -70)
}

# avoid mentioned topics
sp {talk*prefer*verbolization-avoid-recent-topics
	(state <s> ^substate talk ^operator <op> + ^talk-said.event <ev>)
	(<op> ^name {<<|question-verbolization| |statement-verbolization| |reaction-verbolization|>>} ^process-link.topic <topic>)
	(<ev> ^topic <topic>)
-->
	(<s> ^operator <op> = -50)
}

# COGNITION RULES

# interpret speech event as talk-heard event 
#sp {talk*propose*speech-reaction
#	(state <s> ^substate talk -^verbolizing -^waiting-answer ^beliefs <b> ^object <obj>)
#	(<b> ^event <ev>)
#	(<ev> ^name speech ^topic <topic> -^processed speech-to-talk-heard)
#-->
#	(<s> ^operator <op> +, =)
#	(<op> ^name speech-to-talk-heard ^type cognition automatic ^add-event <ev-heard> ^mark-processed <ev>)
#	(<ev-heard> ^name talk-heard ^actor <obj> ^topic <topic> ^memorization-time 3600.0)
#}

# interpret qr-code-is-visible predicate if we are waiting answer
sp {talk*propose*qr-code-is-visible-reaction*waiting-answer
	(state <s> ^substate talk ^waiting-answer ^beliefs.predicate <pred> ^object <obj>)
	(<pred> ^name qr-code-is-visible -^processed qr-code-to-talk-heard-waiting-answer)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name qr-code-to-talk-heard-waiting-answer ^type cognition automatic ^add-event <ev-heard> ^mark-processed <pred>)
	(<ev-heard> ^name talk-heard ^actor <obj> ^memorization-time 3600.0)
}

# copy all topics from qr-code to event talk-heard
sp {talk*elaborate*qr-code-is-visible-reaction*topics
	(state <s> ^substate talk ^operator <op> +)
	(<op> ^name qr-code-to-talk-heard-waiting-answer ^add-event <ev-heard> ^mark-processed <pred>)
	(<pred> ^text <topic>)
-->
	(<ev-heard> ^topic <topic>)
}

# when whaiting-answer terminated but qr-code is still visible interpret it again if corresponding topic was markered as irrelevant
# may cause second time processing for some speaker remarks
sp {talk*propose*qr-code-is-visible-reaction*pause
	(state <s> ^substate talk ^beliefs <b> ^object <obj> ^events <ev-pool>)
	(<b> ^predicate <pred> ^event <ev1>)
	(<pred> ^name qr-code-is-visible ^text <topic> -^processed qr-code-to-talk-heard-pause ^initiated-at <t-start>)
	(<ev1> ^name waiting-answer ^reason {<<|terminted| |deadline|>>} ^process <proc>)
	(<proc> ^object <obj> ^topic <q-topic>)
	(<ev-pool> ^event <ev2>)
	(<ev2> ^name talk-irrelevant ^actor <obj> ^question-topic <q-topic> ^topic <topic> ^initiated-at {>= <t-start>})
-->
	(<s> ^operator <op> +, =)
	(<op> ^name qr-code-to-talk-heard-pause ^type cognition automatic ^add-event <ev-heard> ^mark-processed <pred>)
	(<ev-heard> ^name talk-heard ^actor <obj> ^topic <topic> ^memorization-time 3600.0)
}

# interpret brohoof gesture
sp {talk*propose*gesture-greeting-to-talk-heard
	(state <s> ^substate talk ^waiting-answer ^beliefs.predicate <pred> ^object <obj>)
	(<pred> ^name gesture ^label {<<|brohoof|>>} -^processed gesture-greeting-to-talk-heard)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name gesture-greeting-to-talk-heard ^type cognition automatic ^add-event <ev-heard> ^mark-processed <pred>)
	(<ev-heard> ^name talk-heard ^actor <obj> ^topic greeting brohoof ^memorization-time 3600.0)
}

# detect ignored event
sp {talk*elaborate*question-is-ignored-event
	(state <s> ^top-state 1 ^beliefs <b>)
	(<b> ^event <ev>)
	(<ev> ^name waiting-answer ^reason deadline ^process <proc>)
	(<proc> ^type question ^object <obj> ^topic <topic>)
-->
	(<b> ^event <ev-ignored>)
	(<ev-ignored> ^name talk-ignored ^actor <obj> ^topic <topic> ^memorization-time 3600.0)
}

# detect ignored event
sp {talk*elaborate*statement-is-not-answered-event
	(state <s> ^top-state 1 ^beliefs <b>)
	(<b> ^event <ev>)
	(<ev> ^name waiting-answer ^reason deadline ^process <proc>)
	(<proc> ^type statement ^object <obj> ^topic <topic>)
-->
	(<b> ^event <ev-ignored>)
	(<ev-ignored> ^name talk-no-answer ^actor <obj> ^topic <topic> ^memorization-time 3600.0)
}


# TALK EVENT PROCESSING

# detect events which should be processed if verbolization 
sp {talk*propose*event-reaction
	(state <s> ^substate talk ^beliefs.event <ev>)
	(<ev> ^name {<<|talk-said| |talk-heard| |talk-ignored| |talk-no-answer| |talk-irrelevant| |talk-failed|>> <ev-name>} -^processed talk-event-reaction)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name (concat <ev-name> |-reaction|) ^type cognition ^substate <ev-name> ^event <ev>)
}

# MISSING SPEAKER (talk-failed EVENT PROCESSING)

# detect talk-failed event if looking-at-speaker failed
sp {talk*elaboreate*talk-falied-from-look-at-speaker-failed
	(state <s> ^top-state 1 ^beliefs <b>)
	(<b> ^event <ev>)
	(<ev> ^name looking-at-speaker ^reason terminated ^status failed ^process <proc>)
	(<proc> ^object <obj>)
-->
	(<b> ^event <ev1>)
	(<ev1> ^name talk-failed ^actor <obj> ^topic none)
}

# remove missing speaker predicate if speaker is visible
sp {talk*propose*missing-speaker-is-found
	(state <s> ^bottom-state 1 ^beliefs.predicate <pred>)
	(<pred> ^name missing-speaker ^object.input-link.visible now)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name missing-speaker-is-found ^type cognition automatic ^remove-predicate <pred>)
}

# comlete talk if speaker is misiing and not found
sp {talk*propose*missing-speaker-is-not-found
	(state <s> ^substate talk ^beliefs <b> ^object <obj> ^process <proc>)
	(<b> ^event <ev> ^process <proc>)
	(<ev> ^name missing-speaker ^reason deadline ^predicate.object <obj>)
	(<proc> ^substate talk ^object <obj>)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name speaker-is-missing ^type cognition automatic ^finish-status failed ^finish-process <proc>)
}
