#
# TALKING
#
# 1. elaborate evalution-frames for possible answers
# 2. decide waht to do
# 3. perform ask/say 
#

# ELABORATIONS 

# create basic agumentation for talk substate
sp {talk*elaborate*substate
	(state <s> ^substate talk ^superstate.operator <sop>)
	(<sop> ^object <obj>)
-->
	(<s> ^object <obj> ^verbolization <v>)	
}

# propagate verbolization to the bottom state
sp {talk*elaborate*verbolization
	(state <s> ^superstate.verbolization <v>)
-->
	(<s> ^verbolization <v>)	
}

# attach process to substate
sp {talk*elaborate*attach-processes
	(state <s> ^substate talk ^beliefs.process <proc> ^object <obj>)
	(<proc> ^name {<<|waiting-answer| |waiting-reaction|>> <process-type>} ^substate talk ^object <obj> ^topic <topic>)
-->
	(<s> ^process <proc>)
	(<s> ^<process-type> <proc>)
	(<s> ^last-topic <topic>)
}

# last topic
sp {talk*elaborate*last-topic
	(state <s> ^substate talk ^beliefs.predicate <pred> ^object <obj>)
	(<pred> ^name last-topic ^object <obj> ^topic <topic>)
-->
	(<s> ^last-topic <topic>)
}

# DECISION RULES

# propose question verbolization
sp {talk*propose*question-verbolization
	(state <s> ^substate talk -^process  ^verbolization.frame <q> ^object <obj>)
	(<q> ^type question ^topic <topic> ^text <text> ^animation-tag <tag> ^utility <utility>)
-->
	(<s> ^operator <o> + =)
	(<o> ^name question-verbolization ^utility <utility> ^substate say ^object <obj> ^topic <topic> ^text <text> ^animation-tag <tag> ^result <res-succeed>)
	(<res-succeed> ^status succeed ^add-process <proc>)
	(<proc> ^name waiting-answer ^substate talk ^object <obj> ^topic <topic> ^utility <utility> ^deadline-time 20.0)
}

# propose statement verbolization: statement can be vebolized even if we are waiting answer
sp {talk*propose*statement-verbolization
	(state <s> ^substate talk -^waiting-reaction ^verbolization.frame <q> ^object <obj>)
	(<q> ^type statement ^topic <topic> ^text <text> ^animation-tag <tag> ^utility <utility>)
-->
	(<s> ^operator <o> + =)
	(<o> ^name statement-verbolization ^utility <utility> ^substate say ^object <obj> ^topic <topic> ^text <text> ^animation-tag <tag> ^result <res-succeed>)
	(<res-succeed> ^status succeed ^add-process <proc>)
	(<proc> ^name waiting-reaction ^substate talk ^object <obj> ^topic <topic> ^utility <utility> ^deadline-time 5.0)
}

# propose reaction verbolization
sp {talk*propose*reaction-verbolization
	(state <s> ^substate talk ^verbolization.reaction <q> ^object <obj>)
	(<q> ^topic <topic> ^text <text> ^animation-tag <tag> ^utility <utility>)
-->
	(<s> ^operator <o> + =)
	(<o> ^name reaction-verbolization ^utility <utility> ^substate say ^object <obj> ^topic <topic> ^text <text> ^animation-tag <tag>)
}

# wait until question is answered, failure as ignored event
sp {talk*propose*waiting-answer
	(state <s> ^substate talk ^waiting-answer <proc>)
	(<proc> ^object <obj> ^topic <topic> ^utility <utility>)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name waiting-answer ^substate look-at ^utility <utility> ^object <obj> ^timeout 5.0 ^delay 1.0 ^result <res-failed>)
	(<res-failed> ^status failed ^remove-process <proc> ^add-event <ev>)
	(<ev> ^name talk-ignored ^actor <obj> ^topic <topic>)
}

# waiting for reaction, failure is interpreted as failure
sp {talk*propose*waiting-reaction
	(state <s> ^substate talk ^waiting-reaction <proc>)
	(<proc> ^object <obj> ^topic <topic> ^utility <utility>)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name waiting-reaction ^substate look-at ^utility <utility> ^object <obj> ^timeout 5.0 ^delay 1.0 ^result <res-failed>)
	(<res-failed> ^status failed ^remove-process <proc> ^add-event <ev>)
	(<ev> ^name talk-failed ^actor <obj> ^topic <topic>)
}

# finding-speaker if he is missing
sp {talk*propose*search-missing-speaker
	(state <s> ^substate talk ^beliefs.predicate <proc> ^object <obj> ^verbolization.frame <f>)
	(<proc> ^name missing-speaker ^object <obj>)
	(<f> ^topic missing-speaker ^text <text>)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name search-missing-speaker ^utility 80 ^substate flexbe ^behavior ExecuteJointTrajectoryAndSay ^interruptable hard ^param <p> ^result <res-succeed>)
	(<p> ^joint_trajectory |head_look_around| ^text <text>)
	(<res-succeed> ^status succeed ^add-event <ev>)
	(<ev> ^name talk-speaker-search-finished ^object <obj>)
}

# PREFERENCES

# prefer verbolization operator with greater utility
sp {talk*prefer*say-operator-with-greater-utility
	(state <s> ^substate talk ^operator <op1> + ^operator {<> <op1> <op2>} +)
	(<op1> ^utility <utility>)
	(<op2> ^utility {< <utility>})
-->
	(<s> ^operator <op1> > <op2>)
}

# waiting before action with same utility
sp {talk*prefer*waiting-operators
	(state <s> ^substate talk ^operator <op1> + ^operator {<> <op1> <op2>} +)
	(<op1> ^substate look-at ^utility <utility>)
	(<op2> ^substate say ^utility <utility>)
-->
	(<s> ^operator <op1> > <op2>)
}

# prefer ignored topics are worst
sp {talk*prefer*ignored-topic-worst
	(state <s> ^substate talk ^operator <op> + ^beliefs.predicate <pred> ^object <obj>)
	(<op> ^substate say ^topic <topic>)
	(<pred> ^name ignor-topic ^topic <topic> ^actor <obj>)
-->
	(<s> ^operator <op> <)
}

# COGNITION RULES

# interpret speech event as talk-said event 
sp {talk*propose*speech-reaction
	(state <s> ^substate talk ^beliefs <b> ^object <obj>)
	(<b> ^event <ev>)
	(<ev> ^name speech ^topic <topic>)
-->
	(<b> ^event <ev-heard>)
	(<ev-heard> ^name talk-heard ^actor <obj> ^topic <topic> ^memorization-time 3600.0)
}

# detect events which should be porcessed if verbolization 
sp {talk*propose*event-reaction
	(state <s> ^bottom-state 1 ^beliefs.event <ev>)
	(<ev> ^name {<<|talk-said| |talk-heard| |talk-answered| |talk-ignored| |talk-irrelevant|>> <ev-name>} -^processed talk-event-reaction)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name (concat <ev-name> |-reaction|) ^type cognition ^substate <ev-name> ^event <ev>)
}

# detect ignored event
sp {talk*elaborate*question-is-ignored-event
	(state <s> ^top-state 1 ^beliefs <b>)
	(<b> ^event <ev>)
	(<ev> ^name waiting-answer ^reason deadline ^process <proc>)
	(<proc> ^substate talk ^object <obj> ^topic <topic>)
-->
	(<b> ^event <ev-ignored>)
	(<ev-ignored> ^name talk-ignored ^actor <obj> ^topic <topic> ^memorization-time 3600.0)
}

# detect that speaker is missing
sp {talk*propose*talk-failed-reaction
	(state <s> ^bottom-state 1 ^beliefs.event <ev>)
	(<ev> ^name talk-failed ^object <obj> -^processed talk-failed-reaction)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name talk-failed-reaction ^type cognition automatic ^add-predicate <pred> ^mark-processed <ev>)
	(<pred> ^name missing-speaker ^object <obj> ^deadline 60.0)
}

# remove missing speaker predicate if speaker is visible
sp {talk*propose*missing-speaker-is-found
	(state <s> ^bottom-state 1 ^beliefs.predicate <pred>)
	(<pred> ^name missing-speaker ^object.input-link.visible now)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name missing-speaker-is-found ^type cognition automatic ^remove-predicate <pred>)
}

# comlete talk if speaker is misiing and not found
sp {talk*propose*missing-speaker-is-not-found
	(state <s> ^substate talk ^beliefs <b> ^object <obj> ^results <r>)
	(<b> ^predicate <pred> ^event <ev>)
	(<pred> ^name missing-speaker ^object <obj>)
	(<ev> ^name talk-speaker-search-finished ^object <obj>)
-->
	(<s> ^operator <op> +, =)
	(<op> ^name speaker-is-missing ^type cognition completion ^status talk-failed ^results <r>)
}
