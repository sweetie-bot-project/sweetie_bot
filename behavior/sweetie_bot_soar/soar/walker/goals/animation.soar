# ANIMATION GOAL
#
# Select and execute CompoundAction.
# 
# goal example 
#
# (G1 ^name animation ^drive <d> ^tag greet)
#

# propose goal execution: should cause action selection in substate
sp {propose*goal*animation*execution
	(state <s> ^mem.goal <g>)
	(<g> ^name animation ^drive <d> ^tag <t>)
-->
	(<s> ^operator <o> + =)
	(<o> ^name animation-substate ^goal <g> ^substate select-action ^tag <t>)
}


# propose animations: select animation with corresponding tag in substate
# its cognition action, because decision about animation is made beforehand
sp {animation-substate*goal*propose*flexbe*compound-action
	(state <s> ^name animation-substate ^superstate.operator <ss-op> ^mem.compound-action <action>)
	(<ss-op> ^goal <g> ^tag <t>)
	(<action> ^name <action_name> ^tag <t>)
	(<g> ^name animation)
-->
	(<s> ^operator <o> + =)
	(<o> ^name flexbe ^behavior ExecuteCompoundAction ^param <p> ^type cognition ^goal <g>)
	(<p> ^action_name <action_name>)
}

# aniation completion hook
sp {apply*flexbe*cmd*completed*hook*goal*step-sequence
	(state <s> ^operator <op> ^mem <m>)
   	(<op> ^name flexbe-completed ^cmd <cmd>)
	(<cmd> ^status completed ^outcome finished ^operator.goal <g>)
	(<g> ^name animation)
-->
	(<m> ^goal <g> -)
	(<m> ^completed-goal <g>)
}
