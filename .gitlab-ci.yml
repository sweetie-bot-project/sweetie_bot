
.common:
  stage: build
  image: registry.gitlab.com/sweetie-bot/ros-build/master:$CI_JOB_NAME
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    ROBOT: "false"
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - build.tar
  script:
    - |
      "$CI_PROJECT_DIR/.gitlab-ci/recover-ts.sh" '' HEAD
      git submodule foreach --recursive "$CI_PROJECT_DIR/.gitlab-ci/recover-ts.sh" '' HEAD
      if [[ "$CI_COMMIT_REF_NAME" != "master" ]] && [[ -f build.tar ]]; then
        tar xf build.tar
        rm build.tar
      else
        mkdir -p .build/main
        ln -s "$(pwd)" .build/main/src
      fi
      if [[ "$ROBOT" == "true" ]]; then
        touch \
          hmi/CATKIN_IGNORE \
          behavior/sweetie_bot_voice/CATKIN_IGNORE \
          behavior/sweetie_bot_gait_generator/CATKIN_IGNORE \
          inc/ifopt/CATKIN_IGNORE \
          inc/ifopt/ifopt_core/CATKIN_IGNORE \
          inc/ifopt/ifopt_ipopt/CATKIN_IGNORE \
          inc/ifopt/ifopt_snopt/CATKIN_IGNORE \
          inc/towr/towr/CATKIN_IGNORE \
          inc/towr/towr_ros/CATKIN_IGNORE \
          hardware/sweetie_bot_mic_button/CATKIN_IGNORE
      else
        touch \
          hardware/sweetie_bot_self_test/CATKIN_IGNORE \
          hardware/sweetie_bot_touch/CATKIN_IGNORE
      fi
    - |
      source "/opt/ros/$ROS_DISTRO/setup.bash"
      pushd .build/main
      rosdep check --from-paths src --ignore-src --rosdistro "$ROS_DISTRO" 2>roscheck.tmp \
        cat roscheck.tmp >&2 && ! grep ERROR roscheck.tmp >/dev/null && rm roscheck.tmp
      catkin_make_isolated \
        $CMAKE_TOOLCHAIN_ARG --install --install-space "/opt/ros/sweetie_bot" \
        -DCMAKE_BUILD_TYPE=Release -DLOGGER_DEFAULT=LoggerRosout -DCMAKE_CXX_STANDARD=11
      popd
    - |
      source /src/base/buildpkg.bash
      BASE_VERSION="$DEB_VERSION"
      DEB_VERSION="${BASE_VERSION%~*}-${CI_JOB_ID}~${BASE_VERSION#*~}"
      DEB_NAME="ros-${ROS_DISTRO}-sweetie-bot$PKG_SUFFIX"
      DEB_DESCRIPTION="Package $DEB_NAME for $ROS_DISTRO"
      DEB_HOMEPAGE="http://sweetiebot.net/"
      buildpkg "/opt/ros/sweetie_bot" "sweetie-bot.deb" "ros-${ROS_DISTRO}-sweetie-bot-base$PKG_SUFFIX (=${BASE_VERSION})" \
        libspeechd-dev \
        portaudio19-dev \
        ros-noetic-joint-state-publisher-gui \
        ros-noetic-rqt ros-noetic-rqt-service-caller \
        ros-noetic-joy \
        autotalent \
        python3-speechd \
        python3-requests \
        python3-pyaudio \
        python3-evdev \
        opus-tools \
        lame \
      || echo "ret code $?"
      mv sweetie-bot.deb "$CI_PROJECT_DIR/sweetie-bot-${CI_JOB_NAME}-${CI_JOB_ID}.deb"
      cp -a /src/base/sweetie-bot-base.deb "$CI_PROJECT_DIR/sweetie-bot-base-${CI_JOB_NAME}-${CI_JOB_ID}.deb"
    - |
      cd "$CI_PROJECT_DIR"
      if [[ "$CI_COMMIT_REF_NAME" != "master" ]]; then
        tar cf build.tar .build
      fi
  artifacts:
    name: sweetie-bot-${CI_JOB_NAME}
    expire_in: 3 weeks
    paths:
      - "sweetie-bot-*.deb"

.common-robot:
  extends: .common
  variables:
    ROBOT: "true"

.common-test:
  stage: test
  image: docker:27.3.1
  services:
    - docker:27.3.1-dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker build -t test --build-arg image="$IMAGE_SOURCE" -f .gitlab-ci/test.dockerfile .
    - docker create --name temp test
    - docker cp temp:/home/dev/.ros/log ./__log || true
    - docker cp temp:/home/dev/screenshot.png . || true
    - docker cp temp:/home/dev/diff.png . || true
    - docker cp temp:/home/dev/screenshot-towr.png . || true
    - docker cp temp:/home/dev/diff-towr.png . || true
    - docker cp temp:/home/dev/retcode . && cat ./retcode
    - exit $(cat ./retcode)
  artifacts:
    expire_in: 3 weeks
    paths:
      - screenshot*.png
      - diff*.png
      - __log/
    when: always


focal-amd64:
  extends: .common
focal-tinker:
  extends: .common-robot
focal-arm64v8:
  extends: .common-robot

focal-amd64-test:
  extends: .common-test
  dependencies:
    - focal-amd64
  variables:
    IMAGE_SOURCE: ubuntu:focal




pages:
  stage: deploy
  image: ubuntu:bionic
  dependencies:
    - focal-amd64
    - focal-tinker
    - focal-arm64v8
  only:
    - master
  artifacts:
    expire_in: 1 day
    paths:
      - public
  script:
    - apt-get update -qq && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends reprepro
    - gpg --batch --passphrase "$SINGING_PASSPHRASE" -o priv.asc -d .gitlab-ci/priv.asc.gpg && gpg --import priv.asc; rm priv.asc
    - |
      mkdir -p public/conf || true
      cd public
      cp ../repository.key ../install.bash .
      touch conf/options
    - |
      cat > conf/distributions <<EOF
      Origin: $CI_PROJECT_NAMESPACE.gitlab.io
      Codename: focal
      Architectures: armhf arm64 amd64
      Components: main
      Description: no description
      SignWith: yes
      EOF
    - |
      shopt -s nullglob
      for dist in focal; do
        for f in $CI_PROJECT_DIR/*${dist}*.deb; do
          reprepro -S utils includedeb "$dist" "$f"
        done
      done
    - rm -rf ~/.gnupg
